https://github.com/kubernetes-sigs/kubespray


Cluster shell installation
apt install clustershell
vim /etc/clustershell/groups.d/local.cfg 
Ours hosts:

all: 172.30.1.2[1-3]
clush -g all nmcli connection modify ens192 ipv4.dns 172.30.0.1
clush -g all nmcli connection show ens192 | grep ipv4.dns

clush -g all nmcli connection modify ens192 ethtool.feature-tx off
clush -g all nmcli connection show ens192 | grep ethtool

clush -g all nmcli connection up ens192

clush -g all systemctl disable --now firewalld.service
Kubespray
Get to home directory

cd ~
sudo -i
Copy our public key to hosts

ssh-keygen
ssh-copy-id root@172.30.1.21
ssh-copy-id root@172.30.1.22
ssh-copy-id root@172.30.1.23
git clone https://github.com/kubernetes-sigs/kubespray
cd kubespray
Kubespray configuration

apt install -y python3 python3-pip python3-venv
python3 -m venv .venv
source .venv/bin/activate

# Install dependencies from ``requirements.txt``
pip3 install -r requirements.txt

# Copy ``inventory/sample`` as ``inventory/mycluster``
cp -rfp inventory/sample inventory/mycluster

# Update Ansible inventory file with inventory builder
declare -a IPS=(172.30.1.21 172.30.1.22 172.30.1.23)
CONFIG_FILE=inventory/mycluster/hosts.yaml python3 contrib/inventory_builder/inventory.py ${IPS[@]}

# Review and change parameters under ``inventory/mycluster/group_vars``
less inventory/mycluster/group_vars/all/all.yml
less inventory/mycluster/group_vars/k8s_cluster/k8s-cluster.yml

vim inventory/mycluster/hosts.yaml

ansible-playbook -i inventory/mycluster/hosts.yaml --user=root cluster.yml


root@DEV2:~/kubespray# cat inventory/mycluster/hosts.yaml
all:
  hosts:
    k8s1:
      ansible_host: 172.30.1.21
      ip: 172.30.1.21
      access_ip: 172.30.1.21
    k8s2:
      ansible_host: 172.30.1.22
      ip: 172.30.1.22
      access_ip: 172.30.1.22
    k8s3:
      ansible_host: 172.30.1.23
      ip: 172.30.1.23
      access_ip: 172.30.1.23
  children:
    kube_control_plane:
      hosts:
        k8s1:
        k8s2:
    kube_node:
      hosts:
        k8s1:
        k8s2:
        k8s3:
    etcd:
      hosts:
        k8s1:
        k8s2:
        k8s3:
    k8s_cluster:
      children:
        kube_control_plane:
        kube_node:
    calico_rr:
      hosts: {}
root@DEV2:~/kubespray#




Установка kubectl в Linux

Установка двоичного файла kubectl с помощью curl в Linux

Загрузите последнюю версию с помощью команды:

curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl

Чтобы загрузить определенную версию, вставьте в фрагмент команды $(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt) нужную версию.

Например, команда загрузки версии v1.22.0 для Linux будет выглядеть следующим образом:

curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.22.0/bin/linux/amd64/kubectl

Сделайте двоичный файл kubectl исполняемым:

chmod +x ./kubectl

Переместите двоичный файл в директорию из переменной окружения PATH:

sudo mv ./kubectl /usr/local/bin/kubectl

Убедитесь, что установлена последняя версия:

kubectl version --client

Установка с помощью встроенного пакетного менеджера
Ubuntu, Debian или HypriotOS

sudo apt-get update && sudo apt-get install -y apt-transport-https
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
sudo apt-get update
sudo apt-get install -y kubectl
Установка с помощью стороннего пакетного менеджера
Snap
Homebrew
Если вы используйте Ubuntu или другой Linux-дистрибутив, в котором есть пакетный менеджер snap, kubectl доступен в виде приложения snap.

snap install kubectl --classic

kubectl version


CentOS, RHEL или Fedora
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF
yum install -y kubectl


Установка с помощью стороннего пакетного менеджера 
Snap
Homebrew
Если вы используйте Ubuntu или другой Linux-дистрибутив, в котором есть пакетный менеджер snap, kubectl доступен в виде приложения snap.

snap install kubectl --classic

kubectl version
